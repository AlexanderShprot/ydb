# This file was generated by the build system used internally in Yandex and called "ya"
# (https://github.com/yandex/yatool).
#
# Configuration files of ya build system are usually named ya.make. If ya.make file is present
# at the root of the repository, then this repository supports ya build.
#
# If the repository supports both CMake and ya build configurations, please modify both of them.
#
# If only CMake build configuration is supported then modify only CMake files and note that only
# simple modifications are allowed like adding source-files to targets or adding simple properties
# like target_include_directories. These modifications will be ported to original ya.make files
# by maintainers. Any complex modifications which can't be easily ported back to the ya build
# system may be rejected.


get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

get_built_tool_path(
  TOOL_enum_parser_bin
  TOOL_enum_parser_dependency
  tools/enum_parser/enum_parser
  enum_parser
)

add_library(ydb-library-workload)

target_link_libraries(ydb-library-workload PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  library-cpp-getopt
  api-protos
  cpp-client-ydb_table
  tools-enum_parser-enum_serialization_runtime
)

target_sources(ydb-library-workload PRIVATE
  ${PROJECT_BINARY_DIR}/ydb/library/workload/kv_workload.h_serialized.h
  ${PROJECT_BINARY_DIR}/ydb/library/workload/stock_workload.h_serialized.h
  ${PROJECT_SOURCE_DIR}/ydb/library/workload/workload_factory.cpp
)

generate_enum_serilization(ydb-library-workload
  ${PROJECT_SOURCE_DIR}/ydb/library/workload/kv_workload.h
  GEN_HEADER
  ${PROJECT_BINARY_DIR}/ydb/library/workload/kv_workload.h_serialized.h
  INCLUDE_HEADERS
  ydb/library/workload/kv_workload.h
)

generate_enum_serilization(ydb-library-workload
  ${PROJECT_SOURCE_DIR}/ydb/library/workload/stock_workload.h
  GEN_HEADER
  ${PROJECT_BINARY_DIR}/ydb/library/workload/stock_workload.h_serialized.h
  INCLUDE_HEADERS
  ydb/library/workload/stock_workload.h
)


add_global_library_for(ydb-library-workload.global
  ydb-library-workload
)

target_link_libraries(ydb-library-workload.global PUBLIC
  contrib-libs-linux-headers
  contrib-libs-cxxsupp
  yutil
  library-cpp-getopt
  api-protos
  cpp-client-ydb_table
  tools-enum_parser-enum_serialization_runtime
)

target_sources(ydb-library-workload.global PRIVATE
  ${PROJECT_SOURCE_DIR}/ydb/library/workload/stock_workload.cpp
  ${PROJECT_SOURCE_DIR}/ydb/library/workload/kv_workload.cpp
)

