"use strict";(self.webpackChunkydb_embedded_ui=self.webpackChunkydb_embedded_ui||[]).push([[5278],{5278:(e,t,n)=>{n.r(t),n.d(t,{registerYQLCompletionItemProvider:()=>R});var i=n(93170);const o=["String","Bool","Int32","Uint32","Int64","Uint64","Float","Double","Void","Yson","Utf8","Unit","Json","Date","Datetime","Timestamp","Interval","Null","Int8","Uint8","Int16","Uint16","TzDate","TzDatetime","TzTimestamp","Uuid","EmptyList","EmptyDict","JsonDocument","DyNumber"],s=["CAST","COALESCE","LENGTH","LEN","SUBSTRING","FIND","RFIND","StartsWith","EndsWith","IF","NANVL","Random","RandomNumber","RandomUuid","CurrentUtcDate","CurrentUtcDatetime","CurrentUtcTimestamp","CurrentTzDate","CurrentTzDatetime","CurrentTzTimestamp","AddTimezone","RemoveTimezone","MAX_OF","MIN_OF","GREATEST","LEAST","AsTuple","AsStruct","AsList","AsDict","AsSet","AsListStrict","AsDictStrict","AsSetStrict","Variant","AsVariant","Enum","AsEnum","AsTagged","Untag","TableRow","JoinTableRow","Ensure","EnsureType","EnsureConvertibleTo","ToBytes","FromBytes","ByteAt","TestBit","ClearBit","SetBit","FlipBit","Abs","Just","Unwrap","Nothing","Callable","StaticMap","StaticZip","ListCreate","AsListStrict","ListLength","ListHasItems","ListCollect","ListSort","ListSortAsc","ListSortDesc","ListExtend","ListExtendStrict","ListUnionAll","ListZip","ListZipAll","ListEnumerate","ListReverse","ListSkip","ListTake","ListIndexOf","ListMap","ListFilter","ListFlatMap","ListNotNull","ListFlatten","ListUniq","ListAny","ListAll","ListHas","ListHead","ListLast","ListMin","ListMax","ListSum","ListAvg","ListFold","ListFold1","ListFoldMap","ListFold1Map","ListFromRange","ListReplicate","ListConcat","ListExtract","ListTakeWhile","ListSkipWhile","ListAggregate","ToDict","ToMultiDict","ToSet","DictCreate","SetCreate","DictLength","DictHasItems","DictItems","DictKeys","DictPayloads","DictLookup","DictContains","DictAggregate","SetIsDisjoint","SetIntersection","SetIncludes","SetUnion","SetDifference","SetSymmetricDifference","TryMember","ExpandStruct","AddMember","RemoveMember","ForceRemoveMember","ChooseMembers","RemoveMembers","ForceRemoveMembers","CombineMembers","FlattenMembers","StructMembers","RenameMembers","ForceRenameMembers","GatherMembers","SpreadMembers","ForceSpreadMembers","FormatType","ParseType","TypeOf","InstanceOf","DataType","OptionalType","ListType","StreamType","DictType","TupleType","StructType","VariantType","ResourceType","CallableType","GenericType","UnitType","VoidType","OptionalItemType","ListItemType","StreamItemType","DictKeyType","DictPayloadType","TupleElementType","StructMemberType","CallableResultType","CallableArgumentType","VariantUnderlyingType","JSON_EXISTS","JSON_VALUE","JSON_QUERY"],a=["COUNT","MIN","MAX","SUM","AVG","COUNT_IF","SUM_IF","AVG_IF","SOME","CountDistinctEstimate","HyperLogLog","AGGREGATE_LIST","AGGREGATE_LIST_DISTINCT","AGG_LIST","AGG_LIST_DISTINCT","MAX_BY","MIN_BY","AGGREGATE_BY","MULTI_AGGREGATE_BY","TOP","BOTTOM","TOP_BY","BOTTOM_BY","TOPFREQ","MODE","STDDEV","VARIANCE","CORRELATION","COVARIANCE","PERCENTILE","MEDIAN","HISTOGRAM","LogarithmicHistogram","LogHistogram","LinearHistogram","BOOL_AND","BOOL_OR","BOOL_XOR","BIT_AND","BIT_OR","BIT_XOR","SessionStart"],r=Object.entries({DateTime:["EndOfMonth","Format","FromMicroseconds","FromMilliseconds","FromSeconds","GetDayOfMonth","GetDayOfWeek","GetDayOfWeekName","GetDayOfYear","GetHour","GetMicrosecondOfSecond","GetMillisecondOfSecond","GetMinute","GetMonth","GetMonthName","GetSecond","GetTimezoneId","GetTimezoneName","GetWeekOfYear","GetWeekOfYearIso8601","GetYear","IntervalFromDays","IntervalFromHours","IntervalFromMicroseconds","IntervalFromMilliseconds","IntervalFromMinutes","IntervalFromSeconds","MakeDate","MakeDatetime","MakeTimestamp","MakeTzDate","MakeTzDatetime","MakeTzTimestamp","Parse","ParseHttp","ParseIso8601","ParseRfc822","ParseX509","ShiftMonths","ShiftQuarters","ShiftYears","Split","StartOf","StartOfDay","StartOfMonth","StartOfQuarter","StartOfWeek","StartOfYear","TimeOfDay","ToDays","ToHours","ToMicroseconds","ToMilliseconds","ToMinutes","ToSeconds","Update"],Dsv:["Parse","ReadRecord","Serialize"],String:["AsciiToLower","AsciiToTitle","AsciiToUpper","Base32Decode","Base32Encode","Base32StrictDecode","Base64Decode","Base64Encode","Base64EncodeUrl","Base64StrictDecode","Bin","BinText","CgiEscape","CgiUnescape","Collapse","CollapseText","Contains","DecodeHtml","EncodeHtml","EndsWith","EndsWithIgnoreCase","EscapeC","FromByteList","HasPrefix","HasPrefixIgnoreCase","HasSuffix","HasSuffixIgnoreCase","Hex","HexDecode","HexEncode","HexText","HumanReadableBytes","HumanReadableDuration","HumanReadableQuantity","IsAscii","IsAsciiAlnum","IsAsciiAlpha","IsAsciiDigit","IsAsciiHex","IsAsciiLower","IsAsciiSpace","IsAsciiUpper","JoinFromList","LeftPad","LevensteinDistance","Prec","RemoveAll","RemoveFirst","RemoveLast","ReplaceAll","ReplaceFirst","ReplaceLast","RightPad","SBin","SHex","SplitToList","StartsWith","StartsWithIgnoreCase","Strip","ToByteList","UnescapeC"],Unicode:["Find","Fold","FromCodePointList","GetLength","IsAlnum","IsAlpha","IsAscii","IsDigit","IsHex","IsLower","IsSpace","IsUnicodeSet","IsUpper","IsUtf","JoinFromList","LevensteinDistance","Normalize","NormalizeNFC","NormalizeNFD","NormalizeNFKC","NormalizeNFKD","RFind","RemoveAll","RemoveFirst","RemoveLast","ReplaceAll","ReplaceFirst","ReplaceLast","Reverse","SplitToList","Strip","Substring","ToCodePointList","ToLower","ToTitle","ToUint64","ToUpper","Translit","TryToUint64"],Url:["BuildQueryString","CanBePunycodeHostName","CutQueryStringAndFragment","CutScheme","CutWWW","CutWWW2","Decode","Encode","ForceHostNameToPunycode","ForcePunycodeToHostName","GetCGIParam","GetDomain","GetDomainLevel","GetFragment","GetHost","GetHostPort","GetOwner","GetPath","GetPort","GetScheme","GetSchemeHost","GetSchemeHostPort","GetSignificantDomain","GetTLD","GetTail","HostNameToPunycode","IsAllowedByRobotsTxt","IsKnownTLD","IsWellKnownTLD","Normalize","NormalizeWithDefaultHttpScheme","Parse","PunycodeToHostName","QueryStringToDict","QueryStringToList"],Yson:["Attributes","Contains","ConvertTo","ConvertToBool","ConvertToBoolDict","ConvertToBoolList","ConvertToDict","ConvertToDouble","ConvertToDoubleDict","ConvertToDoubleList","ConvertToInt64","ConvertToInt64Dict","ConvertToInt64List","ConvertToList","ConvertToString","ConvertToStringDict","ConvertToStringList","ConvertToUint64","ConvertToUint64Dict","ConvertToUint64List","Equals","From","GetHash","GetLength","IsBool","IsDict","IsDouble","IsEntity","IsInt64","IsList","IsString","IsUint64","Lookup","LookupBool","LookupDict","LookupDouble","LookupInt64","LookupList","LookupString","LookupUint64","Options","Parse","ParseJson","ParseJsonDecodeUtf8","Serialize","SerializeJson","SerializePretty","SerializeText","WithAttributes","YPath","YPathBool","YPathDict","YPathDouble","YPathInt64","YPathList","YPathString","YPathUint64"],HyperLogLog:["AddValue","Create","Deserialize","GetResult","Merge","Serialize"],Hyperscan:["BacktrackingGrep","BacktrackingMatch","Capture","Grep","Match","MultiGrep","MultiMatch","Replace"],Ip:["ConvertToIPv6","FromString","GetSubnet","GetSubnetByMask","IsEmbeddedIPv4","IsIPv4","IsIPv6","SubnetFromString","SubnetMatch","SubnetToString","ToFixedIPv6String","ToString"],Json:["BoolAsJsonNode","CompilePath","DoubleAsJsonNode","JsonAsJsonNode","JsonDocumentSqlExists","JsonDocumentSqlQuery","JsonDocumentSqlQueryConditionalWrap","JsonDocumentSqlQueryWrap","JsonDocumentSqlTryExists","JsonDocumentSqlValueBool","JsonDocumentSqlValueConvertToUtf8","JsonDocumentSqlValueInt64","JsonDocumentSqlValueNumber","JsonDocumentSqlValueUtf8","Parse","Serialize","SerializeToJsonDocument","SqlExists","SqlQuery","SqlQueryConditionalWrap","SqlQueryWrap","SqlTryExists","SqlValueBool","SqlValueConvertToUtf8","SqlValueInt64","SqlValueNumber","SqlValueUtf8","Utf8AsJsonNode"],Math:["Abs","Acos","Asin","Asinh","Atan","Atan2","Cbrt","Ceil","Cos","Cosh","E","Eps","Erf","ErfInv","ErfcInv","Exp","Exp2","Fabs","Floor","Fmod","FuzzyEquals","Hypot","IsFinite","IsInf","IsNaN","Ldexp","Lgamma","Log","Log10","Log2","Mod","NearbyInt","Pi","Pow","Rem","Remainder","Rint","Round","RoundDownward","RoundToNearest","RoundTowardZero","RoundUpward","Sigmoid","Sin","Sinh","Sqrt","Tan","Tanh","Tgamma","Trunc"],Pire:["Capture","Grep","Match","MultiGrep","MultiMatch","Replace"],Re2:["Capture","Count","Escape","FindAndConsume","Grep","Match","Options","PatternFromLike","Replace"],Re2posix:["Capture","Count","Escape","FindAndConsume","Grep","Match","Options","PatternFromLike","Replace"],Digest:["Argon2","Blake2B","CityHash","CityHash128","Crc32c","Crc64","FarmHashFingerprint","FarmHashFingerprint128","FarmHashFingerprint2","FarmHashFingerprint32","FarmHashFingerprint64","Fnv32","Fnv64","HighwayHash","IntHash64","Md5HalfMix","Md5Hex","Md5Raw","MurMurHash","MurMurHash2A","MurMurHash2A32","MurMurHash32","NumericHash","Sha1","Sha256","SipHash","SuperFastHash","XXH3","XXH3_128"],Histogram:["CalcLowerBound","CalcLowerBoundSafe","CalcUpperBound","CalcUpperBoundSafe","GetSumAboveBound","GetSumBelowBound","GetSumInRange","Normalize","Print","ToCumulativeDistributionFunction"]}).reduce(((e,t)=>{let[n,i]=t;const o=i.map((e=>"".concat(n,"::").concat(e)));return e.concat(o)}),[]),u=["ROW_NUMBER","LAG","LEAD","FIRST_VALUE","LAST_VALUE","RANK","DENSE_RANK","SessionState"],l=[],c=["TablePathPrefix","Warning"],m={Method:0,Function:1,Constructor:2,Field:3,Variable:4,Class:5,Struct:6,Interface:7,Module:8,Property:9,Event:10,Operator:11,Unit:12,Value:13,Constant:14,Enum:15,EnumMember:16,Keyword:17,Text:18,Color:19,File:20,Reference:21,Customcolor:22,Folder:23,TypeParameter:24,User:25,Issue:26,Snippet:27},T=/[\s'"-/@]/;function d(e){let t=e;return e.match(T)&&(t="`".concat(e,"`")),t}function p(e){let t=e;return e.startsWith("`")&&(t=e.slice(1,-1)),t}const g={suggestTemplates:0,suggestPragmas:1,suggestEntity:2,suggestColumns:3,suggestColumnAliases:4,suggestKeywords:5,suggestAggregateFunctions:6,suggestTableFunctions:7,suggestWindowFunctions:8,suggestFunctions:9,suggestUdfs:10,suggestSimpleTypes:11},S=3e5;const L=function(){const e=new Map;return async t=>{const n=p(t),i=e.get(t);if(i)return i;const o=[],s=await window.api.getDescribe({path:n});if("StatusSuccess"===(null===s||void 0===s?void 0:s.Status)){var a,r,u,l;const e=s.PathDescription;if(null!==e&&void 0!==e&&null!==(a=e.Table)&&void 0!==a&&a.Columns)for(const t of e.Table.Columns)t.Name&&o.push(t.Name);if(null!==e&&void 0!==e&&null!==(r=e.ColumnTableDescription)&&void 0!==r&&null!==(u=r.Schema)&&void 0!==u&&u.Columns)for(const t of e.ColumnTableDescription.Schema.Columns)t.Name&&o.push(t.Name);if(null!==e&&void 0!==e&&null!==(l=e.ExternalTableDescription)&&void 0!==l&&l.Columns)for(const t of e.ExternalTableDescription.Columns)t.Name&&o.push(t.Name)}return e.set(t,o),setTimeout((()=>{e.delete(t)}),S),o}}();function C(e){return g[e]}async function y(e){return(await async function(){return s}()).map((t=>({label:t,insertText:t,kind:m.Function,detail:"Function",range:e,sortText:M(C("suggestFunctions"))})))}async function D(e){return(await async function(){return o}()).map((t=>({label:t,insertText:t,kind:m.TypeParameter,detail:"Type",range:e,sortText:M(C("suggestSimpleTypes"))})))}async function I(e){return(await async function(){return r}()).map((t=>({label:t,insertText:t,kind:m.Function,detail:"UDF",range:e,sortText:M(C("suggestUdfs"))})))}async function A(e){return(await async function(){return u}()).map((t=>({label:t,insertText:t,kind:m.Function,detail:"Window function",range:e,sortText:M(C("suggestWindowFunctions"))})))}async function F(e){return(await async function(){return l}()).map((t=>({label:t,insertText:t,kind:m.Function,detail:"Table function",range:e,sortText:M(C("suggestTableFunctions"))})))}async function f(e){return(await async function(){return a}()).map((t=>({label:t,insertText:t,kind:m.Function,detail:"Aggregate function",range:e,sortText:M(C("suggestAggregateFunctions"))})))}async function h(e){return(await async function(){return c}()).map((t=>({label:t,insertText:t,kind:m.Module,detail:"Pragma",range:e,sortText:M(C("suggestPragmas"))})))}const b="abcdefghijklmnopqrstuvwxyz";function M(e){const t=b[e];if(t)return t;const n=Math.floor(e/b.length),i=e%b.length;return b.slice(-1).repeat(n)+b[i]}function E(e){return async(t,i,o,s)=>{const a={line:i.lineNumber,column:i.column},r=function(e,t){const{startColumn:n,endColumn:i}=e.getWordUntilPosition(t),o="$"===e.getLineContent(t.lineNumber)[n-2]?1:0;return{startColumn:n-o,startLineNumber:t.lineNumber,endColumn:i,endLineNumber:t.lineNumber}}(t,i),u=await async function(e,t,i,o){const{parseYqlQuery:s}=await n.e(1523).then(n.bind(n,31523)),a=s(e.getValue(),t);let r=[],u=[],l=[],c=[],T=[],g=[],S=[],b=[];a.suggestEntity&&(r=await async function(e){return[]}());a.suggestFunctions&&(u=await y(i));a.suggestAggregateFunctions&&(l=await f(i));a.suggestWindowFunctions&&(c=await A(i));a.suggestTableFunctions&&(T=await F(i));a.suggestSimpleTypes&&(S=await D(i));a.suggestUdfs&&(g=await I(i));a.suggestPragmas&&(b=await h(i));const E=await function(e,t){return t?null===t||void 0===t?void 0:t.map((t=>({label:t.name,insertText:t.name,kind:m.Field,detail:"Column alias",range:e,sortText:M(C("suggestColumnAliases"))}))):[]}(i,a.suggestColumnAliases),v=await async function(e,t,n){if(null===t||void 0===t||!t.tables)return[];const i=[],o=t.tables.length>1;for(const a of null!==(s=t.tables)&&void 0!==s?s:[]){var s;let t=p(a.name);t.startsWith("/")||(t="".concat(n,"/").concat(t)),(await L(t)).forEach((t=>{const n=d(t);let s=n;a.alias?s="".concat(a.alias,".").concat(n):o&&(s="".concat(a.name,".").concat(n)),i.push({label:s,insertText:s,kind:m.Field,detail:"Column",range:e,sortText:M(C("suggestColumns"))})}))}return i}(i,a.suggestColumns,o),R=function(e,t){return t?null===t||void 0===t?void 0:t.map((t=>({label:t.value,insertText:t.value,kind:m.Keyword,detail:"Keyword",range:e,sortText:M(C("suggestKeywords"))}))):[]}(i,a.suggestKeywords),N=[...r,...u,...c,...T,...g,...S,...b,...E,...v,...R,...l];return N}(t,a,r,e);return{suggestions:u}}}let v;function R(e){v&&v.dispose(),v=i.Mj.registerCompletionItemProvider("sql",{triggerCharacters:[" ","\n","",",",".","`","("],provideCompletionItems:E(e)})}}}]);